@using baxochat.Shared.ChatClient
@using baxochat.Shared.ChatClient.Events
@page "/chat"
@inject NavigationManager navigationManager


@if (!_started)
{
    <input type="text" @bind="_userName">
    <button @onclick="@Login">Login</button>
}
else
{
    <div>
        Logged in as user: @_userName
    </div>
    <div>
        @foreach (Message message in _messages)
        {
            <Message UserName="@message.UserName" Content="@message.Content" />
        }
    </div>

    <div>
        <input type="text" @bind="@_currentMessage">
        <button @onclick="@SendMessage">Send</button>
    </div>
}





@code
{
    Client _client;

    string _userName;

    bool _started = false;

    IList<Message> _messages = new List<Message>();

    string _currentMessage = "";


    async Task Login()
    {
        if (string.IsNullOrEmpty(_userName))
        {
            return;
        }

        _client = new Client(_userName, navigationManager);

        _client.MessageReceived += MessageReceived;

        await _client.StartAsync();

        _started = true;
    }

    async Task SendMessage()
    {
        if (String.IsNullOrWhiteSpace(_currentMessage))
        {
            return;
        }

        await _client.SendMessage(_currentMessage);

        _currentMessage = "";
    }

    void MessageReceived(object sender, MessageReceivedEventArgs e)
    {
        Message message = new Message(e.UserName, e.Message);

        _messages.Add(message);

        StateHasChanged();
    }

    class Message
    {
        public Message(string userName, string content)
        {
            UserName = userName;
            Content = content;
        }

        public string UserName;

        public string Content;
    }
}